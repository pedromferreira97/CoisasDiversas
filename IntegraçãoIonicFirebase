//Passos para a integração Ionic/Angular - Firebase (Serviço de Banco de dados do Google): 

Passo 1: 
- Acessar Firebase (não trabalha como tabelas, como BD padrão; usa 'collections')
- Criar projeto
- Criar um app dentro do projeto
- Criar FireStore Database

__________________________________________________________________
Passo 2:

- Dentro da pasta do projeto: npm install firebase --save
- Depois: npm install @angular/fire --save

__________________________________________________________________
Passo 3:
- Configurar o arquivo 'environment.ts' do projeto Ionic (com as informações do Firebase)

export const environment = {
  production: false, 
  firebase (variável pode ter qualquer nome): {
    apiKey: "AIzaSyARbYIuot2vLoeAiyB9SkJFdF3ipKWigqI",
    authDomain: "projetofireb-228bc.firebaseapp.com",
    projectId: "projetofireb-228bc",
    storageBucket: "projetofireb-228bc.appspot.com",
    messagingSenderId: "30534140984",
    appId: "1:30534140984:web:891f4b5da22c62466252cd"
  }
};

___________________________________________________________________
Passo 4:
- Mudar status do "strict" no arquivo 'tsconfig.json' (de true para false):

"compilerOptions": {
    "strict": false,
}
____________________________________________________________________
Passo 5: 
- Importar módulos (arquivo 'app.module.ts'):

1) AngularFireModule (módulo que faz ligação do Firebase com a nossa aplicação):

import { AngularFireModule } from '@angular/fire/compat';

@NgModule({
  declarations: [AppComponent],
  imports: [AngularFireModule],
  providers: [{ provide: RouteReuseStrategy, useClass: IonicRouteStrategy }],
  bootstrap: [AppComponent],
})

1.1) Adicionar ao AngularFireModule a propriedade Firebase (do arquivo 'environment.ts'):

imports: [AngularFireModule.inicializeApp(environment.firebase)],

__________________________ Fim da integração ____________________
_________________________________________________________________

Fazendo funcionar:
Passo 1:
- Criar serviço 'firebase'

Passo 2:
- Importar módulo 'AngularFirestoreModule' from '@angular/fire/compat/firestore';

@NgModule({
  declarations: [AppComponent],
  imports: [AngularFireModule.initializeApp(environment.firebase), AngularFirestoreModule],
  providers: [{ provide: RouteReuseStrategy, useClass: IonicRouteStrategy }],
  bootstrap: [AppComponent],
})

Passo 3 (firebase.service.ts): 
export class FirebaseService {
  //Criando e tipando uma variável (do tipo coleção para receber coleção)
	itemCollection: AngularFirestoreCollection (Ferramenta para manipula localmente as coleções)
	
	constructor(private angularFS: AngularFirestore) {
		//Para guardar coleções
		this.itemCollection = angularFS.collection('');
	}

 //Para gerar consultaDados() {}:
 import { map } from 'rxjs/operators';

 consultaDados() {
  return this.itemCollection.snapshotChanges().pipe(
		map(actions => {
     //Variável 'a' controla o mapeamento
     return actions.map(a => {
      //Lê o documento, separa os dados e guarda no const data:
      const data = a.payload.doc.data();
      //Separa exclusivamente o id do documento:
      const id = a.payload.doc.id;
      //Verifica se tem mais dados:
      return { id, ...data }
		 })
    })
  )
 }

 consultaOne(id: string) {
  return this.itemCollection.doc(id).valueChanges();
 }

 cadastroDados(item: any) {
	return this.itemCollection.add(item)
 }

 excluirDados(id: string) {
	return this.itemCollection.doc(id).delete()
 }

 atualizarDados(id: string, item: any) {
  return this.itemCollection.doc(id).update(item)
 }

}
